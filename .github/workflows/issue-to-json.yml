name: Issue 转换为 JSON

on:
  issues:
    types: [opened]

jobs:
  convert-to-json:
    runs-on: ubuntu-latest
    if: ${{ !github.event.issue.pull_request }}
    permissions:
      issues: write
    
    steps:
      - name: 检查是否为项目模板 Issue
        id: check
        uses: actions/github-script@v6
        with:
          script: |
            const labels = context.payload.issue.labels || [];
            const isTemplateIssue = labels.some(label => 
              label.name === 'new-project | 添加项目' || 
              label.name.includes('new-project')
            );
            
            if (!isTemplateIssue) {
              core.setFailed('不是项目模板 Issue');
              return;
            }

      - name: 提取 Issue 内容并转换为 JSON
        if: success()
        id: convert
        uses: actions/github-script@v6
        with:
          script: |
            const body = context.payload.issue.body;
            if (!body) {
              core.setFailed('Issue 内容为空');
              return;
            }
            
            console.log('Processing issue body:', body);
            
            // 解析 issue 内容
            const lines = body.split('\n');
            const data = {
              name: '',
              description: '',
              github: '',
              tags: []
            };
            
            let currentField = '';
            for (const line of lines) {
              const cleanLine = line.trim();
              // 跳过空行
              if (!cleanLine) continue;
              
              // 检查字段标识
              if (cleanLine.includes('项目名称')) {
                currentField = 'name';
              } else if (cleanLine.includes('项目描述')) {
                currentField = 'description';
              } else if (cleanLine.includes('GitHub 地址')) {
                currentField = 'github';
              } else if (cleanLine.includes('标签')) {
                currentField = 'tags';
              } else if (currentField && !cleanLine.startsWith('#') && !cleanLine.startsWith('_')) {
                // 填充数据
                if (currentField === 'tags') {
                  data[currentField] = cleanLine.split(',').map(tag => tag.trim()).filter(Boolean);
                } else {
                  data[currentField] = cleanLine;
                }
              }
            }
            
            // 验证数据
            if (!data.name || !data.description || !data.github || !data.tags.length) {
              console.log('Parsed incomplete data:', data);
              core.setFailed('数据解析不完整');
              return;
            }
            
            console.log('Successfully parsed data:', data);
            const jsonOutput = JSON.stringify(data, null, 2);
            
            // 创建评论
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `✅ 项目信息已成功转换为 JSON 格式：\n\`\`\`json\n${jsonOutput}\n\`\`\``
            }); 